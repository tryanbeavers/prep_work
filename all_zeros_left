# Arrays: move zeros to the left
# Given an integer array, move all elements that are 0 to the left while maintaining
# the order of other elements in the array. The array has to be modified in-place.
# Try it yourself before reviewing the solution and explanation.

# in -> [1,10,20,0,59,63,0,88,0]
# out -> [0,0,0,1,10,20,59,63,88]


def all_zeros_left(A):
    print(A)
    read = len(A)-1
    write = len(A)-1

    #start to shift everything that isn't a 0 over to the right end
    while read >= 0:
        if A[read] == 0:
            read = read -1
        else:
            A[write] = A[read]
            read = read -1
            write = write -1
        print(A)
        print("read/write: " + str(read) + " / " + str(write))

    #now that you have shifted everything 0 everything left out
    while write >= 0:
        A[write] = 0
        write = write -1
        print(A)
        print("read/write: " + str(read) + " / " + str(write))

    return A

if __name__ == "__main__":
    A = [1, 10, 20, 0, 59, 63, 0, 88, 0]
    shifted = all_zeros_left(A)
    print(shifted)